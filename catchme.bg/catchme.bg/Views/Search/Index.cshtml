@using catchme.bg.Areas.Identity.Data
@using catchme.bg.Controllers
@using catchme.bg.Models
@using Microsoft.AspNetCore.Mvc.Rendering
@using Microsoft.AspNetCore.Routing
@using X.PagedList
@using X.PagedList.Mvc.Core
@model catchme.bg.Models.SearchViewModel
@{
    ViewData["Title"] = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Search</h2>

@using (Html.BeginForm("Index", "Search", FormMethod.Post, new { @class = "", enctype = "multipart/form-data", id = "searchForm" }))
{
    @Html.HiddenFor(m => m.Profiles)
    @Html.HiddenFor(m => m.Users)
    @Html.HiddenFor(m => m.AgeFromFilter.FilterUserId)
    @Html.HiddenFor(m => m.AgeFromFilter.Name)
    @Html.HiddenFor(m => m.AgeToFilter.FilterUserId)
    @Html.HiddenFor(m => m.AgeToFilter.Name)

    @Html.HiddenFor(m => m.WeightFromFilter.FilterUserId)
    @Html.HiddenFor(m => m.WeightFromFilter.Name)
    @Html.HiddenFor(m => m.WeightToFilter.FilterUserId)
    @Html.HiddenFor(m => m.WeightToFilter.Name)

    @Html.HiddenFor(m => m.HeightFromFilter.FilterUserId)
    @Html.HiddenFor(m => m.HeightFromFilter.Name)
    @Html.HiddenFor(m => m.HeightToFilter.FilterUserId)
    @Html.HiddenFor(m => m.HeightToFilter.Name)
<div class="container">
    <div class="row">
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Age From:</legend>
                @Html.LabelFor(m => m.AgeFromFilter.ItemId, "Age From: ", htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                <div class="col-sm-5">
                    @Html.DropDownListFor(m => m.AgeFromFilter.ItemId, Model.AgeItems, "Select Age", new { @class = "form-control", id = "ageDDL" })
                    @Html.ValidationMessageFor(m => m.AgeFromFilter.ItemId, "", new { @class = "text-danger" })
                </div>
            </fieldset>
        </div>
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Age To:</legend>
                @Html.LabelFor(m => m.AgeToFilter.ItemId, "Age To: ", htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                <div class="col-sm-5">
                    @Html.DropDownListFor(m => m.AgeToFilter.ItemId, Model.AgeItems, "Select Age", new { @class = "form-control", id = "ageDDL" })
                    @Html.ValidationMessageFor(m => m.AgeToFilter.ItemId, "", new { @class = "text-danger" })
                </div>
            </fieldset>
        </div>
    </div>
    <div class="row">
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Height From:</legend>
                @Html.LabelFor(m => m.HeightFromFilter.ItemId, "Height From: ", htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                <div class="col-sm-5">
                    @Html.DropDownListFor(m => m.HeightFromFilter.ItemId, Model.HeightItems, "Select Height", new { @class = "form-control", id = "HeightDDL" })
                    @Html.ValidationMessageFor(m => m.HeightFromFilter.ItemId, "", new { @class = "text-danger" })
                </div>
            </fieldset>
        </div>
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Height To:</legend>
                @Html.LabelFor(m => m.HeightToFilter.ItemId, "Height To: ", htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                <div class="col-sm-5">
                    @Html.DropDownListFor(m => m.HeightToFilter.ItemId, Model.HeightItems, "Select Height", new { @class = "form-control", id = "WeightDDL" })
                    @Html.ValidationMessageFor(m => m.HeightToFilter.ItemId, "", new { @class = "text-danger" })
                </div>
            </fieldset>
        </div>
    </div>
    <div class="row">
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Weight From:</legend>
                @Html.LabelFor(m => m.WeightFromFilter.ItemId, "Weight From: ", htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                <div class="col-sm-5">
                    @Html.DropDownListFor(m => m.WeightFromFilter.ItemId, Model.WeightItems, "Select Weight", new { @class = "form-control", id = "HeightDDL" })
                    @Html.ValidationMessageFor(m => m.WeightFromFilter.ItemId, "", new { @class = "text-danger" })
                </div>
            </fieldset>
        </div>
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Weight To:</legend>
                @Html.LabelFor(m => m.WeightToFilter.ItemId, "Weight To: ", htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                <div class="col-sm-5">
                    @Html.DropDownListFor(m => m.WeightToFilter.ItemId, Model.WeightItems, "Select Weight", new { @class = "form-control", id = "WeightDDL" })
                    @Html.ValidationMessageFor(m => m.WeightToFilter.ItemId, "", new { @class = "text-danger" })
                </div>
            </fieldset>
        </div>
    </div>
    <div class="row">
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Gender:</legend>
                <ul>
                    @for (var i = 0; i < Model.GenderFilter.Count(); i++)
                    {
                        <li>
                            @Html.CheckBoxFor(m => m.GenderFilter[i].Selected)
                            @Html.LabelFor(m => m.GenderFilter[i].Selected, @Model.GenderFilter.ElementAt(i).Name)
                            @Html.HiddenFor(m => m.GenderFilter[i].ItemId)
                            @Html.HiddenFor(m => m.GenderFilter[i].Name)
                            @Html.HiddenFor(m => m.GenderFilter[i].FilterUserId)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Looking For:</legend>
                <ul>
                    @for (var i = 0; i < Model.LookingForFilter.Count(); i++)
                    {
                        <li>
                            @Html.CheckBoxFor(m => m.LookingForFilter[i].Selected)
                            @Html.LabelFor(m => m.LookingForFilter[i].Selected, @Model.LookingForFilter.ElementAt(i).Name)
                            @Html.HiddenFor(m => m.LookingForFilter[i].ItemId)
                            @Html.HiddenFor(m => m.LookingForFilter[i].Name)
                            @Html.HiddenFor(m => m.LookingForFilter[i].FilterUserId)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Marital Status:</legend>
                <ul>
                    @for (var i = 0; i < Model.MaritalStatusFilter.Count(); i++)
                    {
                        <li>
                            @Html.CheckBoxFor(m => m.MaritalStatusFilter[i].Selected)
                            @Html.LabelFor(m => m.MaritalStatusFilter[i].Selected, @Model.MaritalStatusFilter.ElementAt(i).Name)
                            @Html.HiddenFor(m => m.MaritalStatusFilter[i].ItemId)
                            @Html.HiddenFor(m => m.MaritalStatusFilter[i].Name)
                            @Html.HiddenFor(m => m.MaritalStatusFilter[i].FilterUserId)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
    </div>
    <div class="row">
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Children:</legend>
                <ul>
                    @for (var i = 0; i < Model.ChildrenFilter.Count(); i++)
                    {
                        <li>
                            @Html.CheckBoxFor(m => m.ChildrenFilter[i].Selected)
                            @Html.LabelFor(m => m.ChildrenFilter[i].Selected, @Model.ChildrenFilter.ElementAt(i).Name)
                            @Html.HiddenFor(m => m.ChildrenFilter[i].ItemId)
                            @Html.HiddenFor(m => m.ChildrenFilter[i].Name)
                            @Html.HiddenFor(m => m.ChildrenFilter[i].FilterUserId)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Drugs:</legend>
                <ul>
                    @for (var i = 0; i < Model.DrugsFilter.Count(); i++)
                    {
                        <li>
                            @Html.CheckBoxFor(m => m.DrugsFilter[i].Selected)
                            @Html.LabelFor(m => m.DrugsFilter[i].Selected, @Model.DrugsFilter.ElementAt(i).Name)
                            @Html.HiddenFor(m => m.DrugsFilter[i].ItemId)
                            @Html.HiddenFor(m => m.DrugsFilter[i].Name)
                            @Html.HiddenFor(m => m.DrugsFilter[i].FilterUserId)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Diet:</legend>
                <ul>
                    @for (var i = 0; i < Model.DietFilter.Count(); i++)
                    {
                        <li>
                            @Html.CheckBoxFor(m => m.DietFilter[i].Selected)
                            @Html.LabelFor(m => m.DietFilter[i].Selected, @Model.DietFilter.ElementAt(i).Name)
                            @Html.HiddenFor(m => m.DietFilter[i].ItemId)
                            @Html.HiddenFor(m => m.DietFilter[i].Name)
                            @Html.HiddenFor(m => m.DietFilter[i].FilterUserId)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
    </div>
    <div class="row">
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Drinks:</legend>
                <ul>
                    @for (var i = 0; i < Model.DrinksFilter.Count(); i++)
                    {
                        <li>
                            @Html.CheckBoxFor(m => m.DrinksFilter[i].Selected)
                            @Html.LabelFor(m => m.DrinksFilter[i].Selected, @Model.DrinksFilter.ElementAt(i).Name)
                            @Html.HiddenFor(m => m.DrinksFilter[i].ItemId)
                            @Html.HiddenFor(m => m.DrinksFilter[i].Name)
                            @Html.HiddenFor(m => m.DrinksFilter[i].FilterUserId)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Smokes:</legend>
                <ul>
                    @for (var i = 0; i < Model.SmokesFilter.Count(); i++)
                    {
                        <li>
                            @Html.CheckBoxFor(m => m.SmokesFilter[i].Selected)
                            @Html.LabelFor(m => m.SmokesFilter[i].Selected, @Model.SmokesFilter.ElementAt(i).Name)
                            @Html.HiddenFor(m => m.SmokesFilter[i].ItemId)
                            @Html.HiddenFor(m => m.SmokesFilter[i].Name)
                            @Html.HiddenFor(m => m.SmokesFilter[i].FilterUserId)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Religion:</legend>
                <ul>
                    @for (var i = 0; i < Model.ReligionFilter.Count(); i++)
                    {
                        <li>
                            @Html.CheckBoxFor(m => m.ReligionFilter[i].Selected)
                            @Html.LabelFor(m => m.ReligionFilter[i].Selected, @Model.ReligionFilter.ElementAt(i).Name)
                            @Html.HiddenFor(m => m.ReligionFilter[i].ItemId)
                            @Html.HiddenFor(m => m.ReligionFilter[i].Name)
                            @Html.HiddenFor(m => m.ReligionFilter[i].FilterUserId)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
    </div>
    <div class="row">
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Ethnicity:</legend>
                <ul>
                    @for (var i = 0; i < Model.EthnicityFilter.Count(); i++)
                    {
                        <li>
                            @Html.CheckBoxFor(m => m.EthnicityFilter[i].Selected)
                            @Html.LabelFor(m => m.EthnicityFilter[i].Selected, @Model.EthnicityFilter.ElementAt(i).Name)
                            @Html.HiddenFor(m => m.EthnicityFilter[i].ItemId)
                            @Html.HiddenFor(m => m.EthnicityFilter[i].Name)
                            @Html.HiddenFor(m => m.EthnicityFilter[i].FilterUserId)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Education:</legend>
                <ul>
                    @for (var i = 0; i < Model.EducationFilter.Count(); i++)
                    {
                        <li>
                            @Html.CheckBoxFor(m => m.EducationFilter[i].Selected)
                            @Html.LabelFor(m => m.EducationFilter[i].Selected, @Model.EducationFilter.ElementAt(i).Name)
                            @Html.HiddenFor(m => m.EducationFilter[i].ItemId)
                            @Html.HiddenFor(m => m.EducationFilter[i].Name)
                            @Html.HiddenFor(m => m.EducationFilter[i].FilterUserId)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">HairColor:</legend>
                <ul>
                    @for (var i = 0; i < Model.HairColorFilter.Count(); i++)
                    {
                        <li>
                            @Html.CheckBoxFor(m => m.HairColorFilter[i].Selected)
                            @Html.LabelFor(m => m.HairColorFilter[i].Selected, @Model.HairColorFilter.ElementAt(i).Name)
                            @Html.HiddenFor(m => m.HairColorFilter[i].ItemId)
                            @Html.HiddenFor(m => m.HairColorFilter[i].Name)
                            @Html.HiddenFor(m => m.HairColorFilter[i].FilterUserId)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
    </div>
    <div class="row">
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Eye Color:</legend>
                <ul>
                    @for (var i = 0; i < Model.EyeColorFilter.Count(); i++)
                    {
                        <li>
                            @Html.CheckBoxFor(m => m.EyeColorFilter[i].Selected)
                            @Html.LabelFor(m => m.EyeColorFilter[i].Selected, @Model.EyeColorFilter.ElementAt(i).Name)
                            @Html.HiddenFor(m => m.EyeColorFilter[i].ItemId)
                            @Html.HiddenFor(m => m.EyeColorFilter[i].Name)
                            @Html.HiddenFor(m => m.EyeColorFilter[i].FilterUserId)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Body Type:</legend>
                <ul>
                    @for (var i = 0; i < Model.BodyTypeFilter.Count(); i++)
                    {
                        <li>
                            @Html.CheckBoxFor(m => m.BodyTypeFilter[i].Selected)
                            @Html.LabelFor(m => m.BodyTypeFilter[i].Selected, @Model.BodyTypeFilter.ElementAt(i).Name)
                            @Html.HiddenFor(m => m.BodyTypeFilter[i].ItemId)
                            @Html.HiddenFor(m => m.BodyTypeFilter[i].Name)
                            @Html.HiddenFor(m => m.BodyTypeFilter[i].FilterUserId)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Languages:</legend>
                <ul>
                    @for (var i = 0; i < Model.LanguagesFilter.Count(); i++)
                    {
                        <li>
                            @Html.CheckBoxFor(m => m.LanguagesFilter[i].Selected)
                            @Html.LabelFor(m => m.LanguagesFilter[i].Selected, @Model.LanguagesFilter.ElementAt(i).Name)
                            @Html.HiddenFor(m => m.LanguagesFilter[i].ItemId)
                            @Html.HiddenFor(m => m.LanguagesFilter[i].Name)
                            @Html.HiddenFor(m => m.LanguagesFilter[i].FilterUserId)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
    </div>
    <div class="row">
        <div class="col-sm">
            <fieldset class="border p-2">
                <legend class="w-auto">Pets:</legend>
                <ul>
                    @for (var i = 0; i < Model.PetsFilter.Count(); i++)
                    {
                        <li>
                            @Html.CheckBoxFor(m => m.PetsFilter[i].Selected)
                            @Html.LabelFor(m => m.PetsFilter[i].Selected, @Model.PetsFilter.ElementAt(i).Name)
                            @Html.HiddenFor(m => m.PetsFilter[i].ItemId)
                            @Html.HiddenFor(m => m.PetsFilter[i].Name)
                            @Html.HiddenFor(m => m.PetsFilter[i].FilterUserId)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
    </div>

    
</div>
    <button type="submit" name="action">Filter</button>
    <table>
        <tr>
            <th>Username</th>
            <th></th>
        </tr>
        @foreach (var item in Model.OnePageOfUsers)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                <td></td>
            </tr>
        }
    </table>
    <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
    @Html.PagedListPager((IPagedList) Model.OnePageOfUsers, page => Url.Action("Index", new {page = page}),
        new PagedListRenderOptions
        {
            LiElementClasses = new string[] {"page-item"},
            PageClasses = new string[] {"page-link"}
        })
    /**/
}
