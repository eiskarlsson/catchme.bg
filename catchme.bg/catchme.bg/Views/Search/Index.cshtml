@using catchme.bg.Areas.Identity.Data
@using catchme.bg.Controllers
@using X.PagedList
@using X.PagedList.Mvc.Core
@model catchme.bg.Models.SearchViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- import the included stylesheet for some (very basic) default styling -->
<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />

<h2>Index</h2>


@using (Html.BeginForm("Index", "Search", FormMethod.Post, new { @class = "", enctype = "multipart/form-data" }))
{

    @Html.HiddenFor(m => m.Profiles)
    @Html.HiddenFor(m => m.Users)
    <ul>
        @for (var i = 0; i < Model.PetsFilter.Count(); i++)
        {
            <li>
                @Html.CheckBoxFor(m => m.PetsFilter[i].Selected)
                @Html.LabelFor(m => m.PetsFilter[i].Selected, @Model.PetsFilter.ElementAt(i).Name)
                @Html.HiddenFor(m => m.PetsFilter[i].Id)
                @Html.HiddenFor(m => m.PetsFilter[i].Name)
            </li>
        }
    </ul>
    <button type="submit" name="action">Filter</button>
    <table>
        <tr>
            <th>Username</th>
            <th></th>
        </tr>
        @foreach (var item in Model.OnePageOfUsers)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                <td></td>
            </tr>
        }
    </table>
    <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
    @Html.PagedListPager((IPagedList)Model.OnePageOfUsers, page => Url.Action("Index", new{ page } ))
}
